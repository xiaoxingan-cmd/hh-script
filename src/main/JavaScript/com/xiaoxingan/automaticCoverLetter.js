const coverLetterText = `
–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ. 
–ï—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –µ—â—ë –∞–∫—Ç—É–∞–ª—å–Ω–æ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ—Ä–µ–∑ —á–∞—Ç –∏–ª–∏ Telegram: [your_telegram]
`;

function waitForResponseInfinite(selector) {
    return new Promise((resolve) => {
        const check = () => {
            const element = document.querySelector(selector);
            if (element) {
                return resolve(element);
            }

            requestAnimationFrame(check);
        };
        check();
    });
}

function initCoverLetterAutomation() {
    document.body.addEventListener("click", async (event) => {
        const clickedButton = event.target.closest('a[data-qa="vacancy-serp__vacancy_response"]');
        if (!clickedButton) return;

        console.log("üü° –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞. –û–∂–∏–¥–∞–µ–º –∫–Ω–æ–ø–∫—É '–ü—Ä–∏–ª–æ–∂–∏—Ç—å –ø–∏—Å—å–º–æ'...");

        try {
            const attachLetterButton = await waitForResponseInfinite('button[data-qa="vacancy-response-letter-toggle"]');
            attachLetterButton.click();
            console.log("üü¢ –ù–∞–∂–∞–ª–∏ '–ü—Ä–∏–ª–æ–∂–∏—Ç—å –ø–∏—Å—å–º–æ'");

            const textarea = await waitForResponseInfinite('textarea[name="text"]');
            textarea.value = coverLetterText.trim();
            textarea.dispatchEvent(new Event("input", { bubbles: true }));
            console.log("üü¢ –í—Å—Ç–∞–≤–∏–ª–∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ");

            const submitButton = await waitForResponseInfinite('button[data-qa="vacancy-response-letter-submit"]');
            submitButton.click();
            console.log("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        } catch (err) {
            console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞:", err);
        }
    });
}

initCoverLetterAutomation();
console.log("üìå –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è'");